"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type Category {
  id: ID!
  name: String!
  imgUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategoryMutationResponse implements IMutationResponse {
  code: Float!
  success: Boolean!
  message: String
  category: Category
  errors: [FieldError!]
}

input CreateCategoryInput {
  name: String!
  imgUrl: String!
}

input CreateProgramInput {
  name: String!
  imgUrl: String!
  videoUrl: String!
  duration: String!
  setNum: Float!
  bodyPart: String!
  level: Float!
  description: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FieldError {
  field: String!
  message: String!
}

interface IMutationResponse {
  code: Float!
  success: Boolean!
  message: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createCategory(createCatInput: CreateCategoryInput!): CategoryMutationResponse!
  createProgram(createProgramInput: CreateProgramInput!): ProgramMutationResponse!
  register(registerInput: RegisterInput!): UserMutationResponse!
  login(loginInput: LoginInput!): UserMutationResponse!
  logout(userId: ID!): UserMutationResponse!
}

type PaginatedPrograms {
  totalCount: Float!
  cursor: DateTime!
  hasMore: Boolean!
  paginatedPrograms: [Program!]!
}

type Program {
  id: ID!
  name: String!
  duration: String!
  setNum: Float!
  bodyPart: String!
  level: Float!
  description: String!
  imgUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProgramMutationResponse implements IMutationResponse {
  code: Float!
  success: Boolean!
  message: String
  program: Program
  errors: [FieldError!]
}

type Query {
  posts(cursor: String, limit: Int!): PaginatedPrograms
  post(id: ID!): Program
  hello: String!
}

input RegisterInput {
  fullName: String!
  email: String!
  password: String!
}

type User {
  id: ID!
  email: String!
  fullName: String!
}

type UserMutationResponse implements IMutationResponse {
  code: Float!
  success: Boolean!
  message: String
  user: User
  accessToken: String
}

